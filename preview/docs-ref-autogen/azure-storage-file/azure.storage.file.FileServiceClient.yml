### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.file.FileServiceClient.create_share
  - azure.storage.file.FileServiceClient.delete_share
  - azure.storage.file.FileServiceClient.from_connection_string
  - azure.storage.file.FileServiceClient.generate_shared_access_signature
  - azure.storage.file.FileServiceClient.get_service_properties
  - azure.storage.file.FileServiceClient.get_share_client
  - azure.storage.file.FileServiceClient.list_shares
  - azure.storage.file.FileServiceClient.set_service_properties
  class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.storage.file._shared.utils.StorageAccountHostsMixin
  langs:
  - python
  module: azure.storage.file
  name: FileServiceClient
  summary: 'A client to interact with the File Service at the account level.


    This client provides operations to retrieve and configure the account properties

    as well as list, create and delete shares within the account.

    For operations relating to a specific share, a client for that entity

    can also be retrieved using the *get_share_client* function.'
  syntax:
    content: FileServiceClient(account_url, credential=None, **kwargs)
    parameters:
    - description: 'The URL to the file storage account. Any other entities included

        in the URL path (e.g. share or file) will be discarded. This URL can be optionally

        authenticated with a SAS token.'
      id: account_url
      type:
      - str
    - description: 'The credential with which to authenticate. This is optional if
        the

        account URL already has a SAS token. The value can be a SAS token string or
        an account

        shared access key.'
      id: credential
    variables:
    - description: 'The full endpoint URL to the file service endpoint, including
        SAS token if used. This could be

        either the primary endpoint, or the secondard endpoint depending on the current
        *location_mode*.'
      id: url
      type:
      - str
    - description: The full primary endpoint URL.
      id: primary_endpoint
      type:
      - str
    - description: The hostname of the primary endpoint.
      id: primary_hostname
      type:
      - str
    - description: 'The full secondard endpoint URL if configured. If not available

        a ValueError will be raised. To explicitly specify a secondary hostname, use
        the optional

        *secondary_hostname* keyword argument on instantiation.'
      id: secondary_endpoint
      type:
      - str
    - description: 'The hostname of the secondary endpoint. If not available this

        will be None. To explicitly specify a secondary hostname, use the optional

        *secondary_hostname* keyword argument on instantiation.'
      id: secondary_hostname
      type:
      - str
    - description: 'The location mode that the client is currently using. By default

        this will be "primary". Options include "primary" and "secondary".'
      id: location_mode
      type:
      - str
  type: class
  uid: azure.storage.file.FileServiceClient
- class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient.create_share
  langs:
  - python
  module: azure.storage.file
  name: create_share(share_name, metadata=None, quota=None, timeout=None, **kwargs)
  summary: 'Creates a new share under the specified account. If the share

    with the same name already exists, the operation fails. Returns a client with

    which to interact with the newly created share.'
  syntax:
    content: create_share(share_name, metadata=None, quota=None, timeout=None, **kwargs)
    parameters:
    - description: The name of the share to create.
      id: share_name
      type:
      - str
    - defaultValue: None
      description: 'A dict with name_value pairs to associate with the

        share as metadata. Example:{''Category'':''test''}'
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: Quota in bytes.
      id: quota
      type:
      - int
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - azure.storage.file.share_client.ShareClient
  type: method
  uid: azure.storage.file.FileServiceClient.create_share
- class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient.delete_share
  langs:
  - python
  module: azure.storage.file
  name: delete_share(share_name, delete_snapshots=False, timeout=None, **kwargs)
  summary: 'Marks the specified share for deletion. The share is

    later deleted during garbage collection.'
  syntax:
    content: delete_share(share_name, delete_snapshots=False, timeout=None, **kwargs)
    parameters:
    - description: 'The share to delete. This can either be the name of the share,

        or an instance of ShareProperties.'
      id: share_name
      type:
      - str
      - azure.storage.file.models.ShareProperties
    - defaultValue: 'False'
      description: Indicates if snapshots are to be deleted.
      id: delete_snapshots
      type:
      - bool
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.file.FileServiceClient.delete_share
- class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient.from_connection_string
  langs:
  - python
  module: azure.storage.file
  name: from_connection_string(conn_str, credential=None, **kwargs)
  summary: Create FileServiceClient from a Connection String.
  syntax:
    content: from_connection_string(conn_str, credential=None, **kwargs)
    parameters:
    - description: A connection string to an Azure Storage account.
      id: conn_str
      type:
      - str
    - description: 'The credential with which to authenticate. This is optional if
        the

        account URL already has a SAS token. The value can be a SAS token string or
        an account

        shared access key.'
      id: credential
    - defaultValue: None
      id: credential
  type: method
  uid: azure.storage.file.FileServiceClient.from_connection_string
- class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient.generate_shared_access_signature
  langs:
  - python
  module: azure.storage.file
  name: generate_shared_access_signature(resource_types, permission, expiry, start=None,
    ip=None, protocol=None)
  summary: 'Generates a shared access signature for the file service.


    Use the returned signature with the credential parameter of any FileServiceClient,

    ShareClient, DirectoryClient, or FileClient.'
  syntax:
    content: generate_shared_access_signature(resource_types, permission, expiry,
      start=None, ip=None, protocol=None)
    parameters:
    - description: Specifies the resource types that are accessible with the account
        SAS.
      id: resource_types
      type:
      - azure.storage.file._shared.models.ResourceTypes
    - description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - azure.storage.file._shared.models.AccountPermissions
    - description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying sip=168.1.5.65 or sip=168.1.5.60-168.1.5.70 on the
        SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - defaultValue: None
      description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: method
  uid: azure.storage.file.FileServiceClient.generate_shared_access_signature
- class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient.get_service_properties
  langs:
  - python
  module: azure.storage.file
  name: get_service_properties(timeout=None, **kwargs)
  summary: 'Gets the properties of a storage account''s File service, including

    Azure Storage Analytics.'
  syntax:
    content: get_service_properties(timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - azure.storage.file._generated.models.StorageServiceProperties
  type: method
  uid: azure.storage.file.FileServiceClient.get_service_properties
- class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient.get_share_client
  langs:
  - python
  module: azure.storage.file
  name: get_share_client(share, snapshot=None)
  summary: 'Get a client to interact with the specified share.

    The share need not already exist.'
  syntax:
    content: get_share_client(share, snapshot=None)
    parameters:
    - description: 'The share. This can either be the name of the share,

        or an instance of ShareProperties.'
      id: share
      type:
      - str
      - azure.storage.file.models.ShareProperties
    - defaultValue: None
      description: An optional share snapshot on which to operate.
      id: snapshot
      type:
      - str
    return:
      description: A ShareClient.
      type:
      - azure.storage.file.share_client.ShareClient
  type: method
  uid: azure.storage.file.FileServiceClient.get_share_client
- class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient.list_shares
  langs:
  - python
  module: azure.storage.file
  name: list_shares(name_starts_with=None, include_metadata=False, include_snapshots=False,
    marker=None, timeout=None, **kwargs)
  summary: 'Returns auto-paging iterable of dict-like ShareProperties under the specified
    account.

    The generator will lazily follow the continuation tokens returned by

    the service and stop when all shares have been returned.'
  syntax:
    content: list_shares(name_starts_with=None, include_metadata=False, include_snapshots=False,
      marker=None, timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: 'Filters the results to return only shares whose names

        begin with the specified name_starts_with.'
      id: name_starts_with
      type:
      - str
    - defaultValue: 'False'
      description: Specifies that share metadata be returned in the response.
      id: include_metadata
      type:
      - bool
    - defaultValue: 'False'
      description: Specifies that share snapshot be returned in the response.
      id: include_snapshots
      type:
      - bool
    - defaultValue: None
      description: 'An opaque continuation token. This value can be retrieved from
        the

        next_marker field of a previous generator object. If specified,

        this generator will begin returning results from this point.'
      id: marker
      type:
      - str
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: An iterable (auto-paging) of ShareProperties.
      type:
      - azure.storage.file.models.SharePropertiesPaged
  type: method
  uid: azure.storage.file.FileServiceClient.list_shares
- class: azure.storage.file.FileServiceClient
  fullName: azure.storage.file.FileServiceClient.set_service_properties
  langs:
  - python
  module: azure.storage.file
  name: set_service_properties(hour_metrics=None, minute_metrics=None, cors=None,
    timeout=None, **kwargs)
  summary: 'Sets the properties of a storage account''s File service, including

    Azure Storage Analytics. If an element (e.g. Logging) is left as None, the

    existing settings on the service for that functionality are preserved.'
  syntax:
    content: set_service_properties(hour_metrics=None, minute_metrics=None, cors=None,
      timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: 'The hour metrics settings provide a summary of request

        statistics grouped by API in hourly aggregates for files.'
      id: hour_metrics
      type:
      - azure.storage.file.models.Metrics
    - defaultValue: None
      description: 'The minute metrics settings provide request statistics

        for each minute for files.'
      id: minute_metrics
      type:
      - azure.storage.file.models.Metrics
    - defaultValue: None
      description: 'You can include up to five CorsRule elements in the

        list. If an empty list is specified, all CORS rules will be deleted,

        and CORS will be disabled for the service.'
      id: cors
      type:
      - list(<xref:azure.storage.file.models.CorsRule>)
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.file.FileServiceClient.set_service_properties
references:
- fullName: azure.storage.file.FileServiceClient.create_share
  isExternal: false
  name: create_share(share_name, metadata=None, quota=None, timeout=None, **kwargs)
  parent: azure.storage.file.FileServiceClient
  uid: azure.storage.file.FileServiceClient.create_share
- fullName: azure.storage.file.FileServiceClient.delete_share
  isExternal: false
  name: delete_share(share_name, delete_snapshots=False, timeout=None, **kwargs)
  parent: azure.storage.file.FileServiceClient
  uid: azure.storage.file.FileServiceClient.delete_share
- fullName: azure.storage.file.FileServiceClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, credential=None, **kwargs)
  parent: azure.storage.file.FileServiceClient
  uid: azure.storage.file.FileServiceClient.from_connection_string
- fullName: azure.storage.file.FileServiceClient.generate_shared_access_signature
  isExternal: false
  name: generate_shared_access_signature(resource_types, permission, expiry, start=None,
    ip=None, protocol=None)
  parent: azure.storage.file.FileServiceClient
  uid: azure.storage.file.FileServiceClient.generate_shared_access_signature
- fullName: azure.storage.file.FileServiceClient.get_service_properties
  isExternal: false
  name: get_service_properties(timeout=None, **kwargs)
  parent: azure.storage.file.FileServiceClient
  uid: azure.storage.file.FileServiceClient.get_service_properties
- fullName: azure.storage.file.FileServiceClient.get_share_client
  isExternal: false
  name: get_share_client(share, snapshot=None)
  parent: azure.storage.file.FileServiceClient
  uid: azure.storage.file.FileServiceClient.get_share_client
- fullName: azure.storage.file.FileServiceClient.list_shares
  isExternal: false
  name: list_shares(name_starts_with=None, include_metadata=False, include_snapshots=False,
    marker=None, timeout=None, **kwargs)
  parent: azure.storage.file.FileServiceClient
  uid: azure.storage.file.FileServiceClient.list_shares
- fullName: azure.storage.file.FileServiceClient.set_service_properties
  isExternal: false
  name: set_service_properties(hour_metrics=None, minute_metrics=None, cors=None,
    timeout=None, **kwargs)
  parent: azure.storage.file.FileServiceClient
  uid: azure.storage.file.FileServiceClient.set_service_properties
- fullName: dict(str, str)
  name: dict(str, str)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: dict(str, str)
- fullName: list(<xref:azure.storage.file.models.CorsRule>)
  name: list(CorsRule>)
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: <xref:azure.storage.file.models.CorsRule>
    name: CorsRule>
    uid: <xref:azure.storage.file.models.CorsRule>
  - fullName: )
    name: )
  uid: list(<xref:azure.storage.file.models.CorsRule>)
