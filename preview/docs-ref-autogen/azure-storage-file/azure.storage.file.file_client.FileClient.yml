### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.file.file_client.FileClient.clear_range
  - azure.storage.file.file_client.FileClient.close_handles
  - azure.storage.file.file_client.FileClient.copy_file_from_url
  - azure.storage.file.file_client.FileClient.create_file
  - azure.storage.file.file_client.FileClient.delete_file
  - azure.storage.file.file_client.FileClient.download_file
  - azure.storage.file.file_client.FileClient.from_connection_string
  - azure.storage.file.file_client.FileClient.generate_shared_access_signature
  - azure.storage.file.file_client.FileClient.get_file_properties
  - azure.storage.file.file_client.FileClient.get_ranges
  - azure.storage.file.file_client.FileClient.list_handles
  - azure.storage.file.file_client.FileClient.resize_file
  - azure.storage.file.file_client.FileClient.set_file_metadata
  - azure.storage.file.file_client.FileClient.set_http_headers
  - azure.storage.file.file_client.FileClient.upload_file
  - azure.storage.file.file_client.FileClient.upload_range
  class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.storage.file._shared.utils.StorageAccountHostsMixin
  langs:
  - python
  module: azure.storage.file.file_client
  name: FileClient
  summary: A client to interact with a specific file, although that file may not yet
    exist.
  syntax:
    content: FileClient(file_url, share=None, file_path=None, snapshot=None, credential=None,
      **kwargs)
    parameters:
    - description: 'The full URI to the file. This can also be a URL to the storage
        account

        or share, in which case the file and/or share must also be specified.'
      id: file_url
      type:
      - str
    - description: 'The share for the file. If specified, this value will override

        a share value specified in the file URL.'
      id: share
      type:
      - str
      - azure.storage.file.models.ShareProperties
    - description: 'The file path to the file with which to interact. If specified,
        this value will override

        a file value specified in the file URL.'
      id: file_path
      type:
      - str
    - description: An optional file snapshot on which to operate.
      id: snapshot
      type:
      - str
    - description: 'The credential with which to authenticate. This is optional if
        the

        account URL already has a SAS token. The value can be a SAS token string or
        an account

        shared access key.'
      id: credential
    variables:
    - description: 'The full endpoint URL to the File, including SAS token if used.
        This could be

        either the primary endpoint, or the secondard endpoint depending on the current
        *location_mode*.'
      id: url
      type:
      - str
    - description: The full primary endpoint URL.
      id: primary_endpoint
      type:
      - str
    - description: The hostname of the primary endpoint.
      id: primary_hostname
      type:
      - str
    - description: 'The full secondard endpoint URL if configured. If not available

        a ValueError will be raised. To explicitly specify a secondary hostname, use
        the optional

        *secondary_hostname* keyword argument on instantiation.'
      id: secondary_endpoint
      type:
      - str
    - description: 'The hostname of the secondary endpoint. If not available this

        will be None. To explicitly specify a secondary hostname, use the optional

        *secondary_hostname* keyword argument on instantiation.'
      id: secondary_hostname
      type:
      - str
    - description: 'The location mode that the client is currently using. By default

        this will be "primary". Options include "primary" and "secondary".'
      id: location_mode
      type:
      - str
  type: class
  uid: azure.storage.file.file_client.FileClient
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.clear_range
  langs:
  - python
  module: azure.storage.file.file_client
  name: clear_range(start_range, end_range, timeout=None, **kwargs)
  summary: 'Clears the specified range and releases the space used in storage for

    that range.'
  syntax:
    content: clear_range(start_range, end_range, timeout=None, **kwargs)
    parameters:
    - description: 'Start of byte range to use for clearing a section of the file.

        The range can be up to 4 MB in size.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of file.'
      id: start_range
      type:
      - int
    - description: 'End of byte range to use for clearing a section of the file.

        The range can be up to 4 MB in size.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of file.'
      id: end_range
      type:
      - int
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: File-updated property dict (Etag and last modified).
      type:
      - Dict[str, Any]
  type: method
  uid: azure.storage.file.file_client.FileClient.clear_range
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.close_handles
  langs:
  - python
  module: azure.storage.file.file_client
  name: close_handles(handle=None, timeout=None, **kwargs)
  summary: 'Close open file handles.


    This operation may not finish with a single call, so a long-running poller

    is returned that can be used to wait until the operation is complete.'
  syntax:
    content: close_handles(handle=None, timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: 'Optionally, a specific handle to close. The default value is ''*''

        which will attempt to close all open handles.'
      id: handle
      type:
      - str
      - azure.storage.file.models.Handle
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: A long-running poller to get operation status.
      type:
      - azure.core.polling.LROPoller
  type: method
  uid: azure.storage.file.file_client.FileClient.close_handles
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.copy_file_from_url
  langs:
  - python
  module: azure.storage.file.file_client
  name: copy_file_from_url(source_url, metadata=None, timeout=None, **kwargs)
  summary: 'Copies the file from the provided URL to the file referenced by

    the client.'
  syntax:
    content: copy_file_from_url(source_url, metadata=None, timeout=None, **kwargs)
    parameters:
    - description: Specifies the URL of the source file.
      id: source_url
      type:
      - str
    - defaultValue: None
      description: Name-value pairs associated with the file as metadata.
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Polling object in order to wait on or abort the operation
      type:
      - azure.storage.file.polling.CopyStatusPoller
  type: method
  uid: azure.storage.file.file_client.FileClient.copy_file_from_url
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.create_file
  langs:
  - python
  module: azure.storage.file.file_client
  name: create_file(size, content_settings=None, metadata=None, timeout=None, **kwargs)
  summary: 'Creates a new file.


    Note that it only initializes the file with no content.'
  syntax:
    content: create_file(size, content_settings=None, metadata=None, timeout=None,
      **kwargs)
    parameters:
    - description: 'Specifies the maximum size for the file,

        up to 1 TB.'
      id: size
      type:
      - int
    - defaultValue: None
      description: ContentSettings object used to set file properties.
      id: content_settings
      type:
      - azure.storage.file.models.ContentSettings
    - defaultValue: None
      description: Name-value pairs associated with the file as metadata.
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: File-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.file.file_client.FileClient.create_file
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.delete_file
  langs:
  - python
  module: azure.storage.file.file_client
  name: delete_file(timeout=None, **kwargs)
  summary: 'Marks the specified file for deletion. The file is

    later deleted during garbage collection.'
  syntax:
    content: delete_file(timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.file.file_client.FileClient.delete_file
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.download_file
  langs:
  - python
  module: azure.storage.file.file_client
  name: download_file(offset=None, length=None, validate_content=False, timeout=None,
    **kwargs)
  summary: Downloads a file to a stream with automatic chunking.
  syntax:
    content: download_file(offset=None, length=None, validate_content=False, timeout=None,
      **kwargs)
    parameters:
    - defaultValue: None
      description: 'Start of byte range to use for downloading a section of the file.

        Must be set if length is provided.'
      id: offset
      type:
      - int
    - defaultValue: None
      description: 'Number of bytes to read from the stream. This is optional, but

        should be supplied for optimal performance.'
      id: length
      type:
      - int
    - defaultValue: 'False'
      description: 'If true, calculates an MD5 hash for each chunk of the file. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https as https (the default) will

        already validate. Note that this MD5 hash is not stored with the

        file. Also note that if enabled, the memory-efficient upload algorithm

        will not be used, because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      type:
      - bool
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: A iterable data generator (stream)
  type: method
  uid: azure.storage.file.file_client.FileClient.download_file
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.from_connection_string
  langs:
  - python
  module: azure.storage.file.file_client
  name: from_connection_string(conn_str, share=None, file_path=None, snapshot=None,
    credential=None, **kwargs)
  summary: Create FileClient from a Connection String.
  syntax:
    content: from_connection_string(conn_str, share=None, file_path=None, snapshot=None,
      credential=None, **kwargs)
    parameters:
    - description: A connection string to an Azure Storage account.
      id: conn_str
      type:
      - str
    - description: 'The share. This can either be the name of the share,

        or an instance of ShareProperties'
      id: share
      type:
      - str
      - azure.storage.file.models.ShareProperties
    - defaultValue: None
      description: The file path.
      id: file_path
      type:
      - str
    - defaultValue: None
      description: An optional file snapshot on which to operate.
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'The credential with which to authenticate. This is optional if
        the

        account URL already has a SAS token. The value can be a SAS token string or
        an account

        shared access key.'
      id: credential
    - defaultValue: None
      id: credential
  type: method
  uid: azure.storage.file.file_client.FileClient.from_connection_string
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.generate_shared_access_signature
  langs:
  - python
  module: azure.storage.file.file_client
  name: generate_shared_access_signature(permission=None, expiry=None, start=None,
    policy_id=None, ip=None, protocol=None, cache_control=None, content_disposition=None,
    content_encoding=None, content_language=None, content_type=None)
  summary: 'Generates a shared access signature for the file.


    Use the returned signature with the credential parameter of any FileServiceClient,

    ShareClient, DirectoryClient, or FileClient.'
  syntax:
    content: generate_shared_access_signature(permission=None, expiry=None, start=None,
      policy_id=None, ip=None, protocol=None, cache_control=None, content_disposition=None,
      content_encoding=None, content_language=None, content_type=None)
    parameters:
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - azure.storage.file.models.FilePermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'A unique value up to 64 characters in length that correlates to
        a

        stored access policy.'
      id: policy_id
      type:
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying sip=168.1.5.65 or sip=168.1.5.60-168.1.5.70 on the
        SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - defaultValue: None
      description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.'
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.'
      id: content_disposition
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.'
      id: content_encoding
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.'
      id: content_language
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.'
      id: content_type
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: method
  uid: azure.storage.file.file_client.FileClient.generate_shared_access_signature
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.get_file_properties
  langs:
  - python
  module: azure.storage.file.file_client
  name: get_file_properties(timeout=None, **kwargs)
  summary: 'Returns all user-defined metadata, standard HTTP properties, and

    system properties for the file.'
  syntax:
    content: get_file_properties(timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: FileProperties
      type:
      - azure.storage.file.models.FileProperties
  type: method
  uid: azure.storage.file.file_client.FileClient.get_file_properties
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.get_ranges
  langs:
  - python
  module: azure.storage.file.file_client
  name: get_ranges(start_range=None, end_range=None, timeout=None, **kwargs)
  summary: Returns the list of valid ranges of a file.
  syntax:
    content: get_ranges(start_range=None, end_range=None, timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: 'Specifies the start offset of bytes over which to get ranges.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of file.'
      id: start_range
      type:
      - int
    - defaultValue: None
      description: 'Specifies the end offset of bytes over which to get ranges.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of file.'
      id: end_range
      type:
      - int
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: A list of valid ranges.
      type:
      - List[dict[str, int]]
  type: method
  uid: azure.storage.file.file_client.FileClient.get_ranges
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.list_handles
  langs:
  - python
  module: azure.storage.file.file_client
  name: list_handles(marker=None, timeout=None, **kwargs)
  summary: Lists handles for file.
  syntax:
    content: list_handles(marker=None, timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: 'An opaque continuation token. This value can be retrieved from
        the

        next_marker field of a previous generator object. If specified,

        this generator will begin returning results from this point.'
      id: marker
      type:
      - str
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: An auto-paging iterable of HandleItems
  type: method
  uid: azure.storage.file.file_client.FileClient.list_handles
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.resize_file
  langs:
  - python
  module: azure.storage.file.file_client
  name: resize_file(size, timeout=None, **kwargs)
  summary: Resizes a file to the specified size.
  syntax:
    content: resize_file(size, timeout=None, **kwargs)
    parameters:
    - description: Size to resize file to (in bytes)
      id: size
      type:
      - int
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: File-updated property dict (Etag and last modified).
      type:
      - Dict[str, Any]
  type: method
  uid: azure.storage.file.file_client.FileClient.resize_file
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.set_file_metadata
  langs:
  - python
  module: azure.storage.file.file_client
  name: set_file_metadata(metadata=None, timeout=None, **kwargs)
  summary: 'Sets user-defined metadata for the specified file as one or more

    name-value pairs.


    Each call to this operation replaces all existing metadata

    attached to the file. To remove all metadata from the file,

    call this operation with no metadata dict.'
  syntax:
    content: set_file_metadata(metadata=None, timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: Name-value pairs associated with the file as metadata.
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: File-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.file.file_client.FileClient.set_file_metadata
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.set_http_headers
  langs:
  - python
  module: azure.storage.file.file_client
  name: set_http_headers(content_settings, timeout=None, **kwargs)
  summary: Sets HTTP headers on the file.
  syntax:
    content: set_http_headers(content_settings, timeout=None, **kwargs)
    parameters:
    - description: ContentSettings object used to set file properties.
      id: content_settings
      type:
      - azure.storage.file.models.ContentSettings
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: File-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.file.file_client.FileClient.set_http_headers
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.upload_file
  langs:
  - python
  module: azure.storage.file.file_client
  name: upload_file(data, length=None, metadata=None, content_settings=None, validate_content=False,
    max_connections=1, timeout=None, encoding='UTF-8', **kwargs)
  summary: Uploads a new file.
  syntax:
    content: upload_file(data, length=None, metadata=None, content_settings=None,
      validate_content=False, max_connections=1, timeout=None, encoding='UTF-8', **kwargs)
    parameters:
    - description: Content of the file.
      id: data
      type:
      - Any
    - defaultValue: None
      description: Length of the file in bytes. Specify its maximum size, up to 1
        TiB.
      id: length
      type:
      - int
    - defaultValue: None
      description: Name-value pairs associated with the file as metadata.
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: ContentSettings object used to set file properties.
      id: content_settings
      type:
      - azure.storage.file.models.ContentSettings
    - defaultValue: 'False'
      description: 'If true, calculates an MD5 hash for each range of the file. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https as https (the default) will

        already validate. Note that this MD5 hash is not stored with the

        file.'
      id: validate_content
      type:
      - bool
    - defaultValue: '1'
      description: Maximum number of parallel connections to use.
      id: max_connections
      type:
      - int
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    - defaultValue: UTF-8
      description: Defaults to UTF-8.
      id: encoding
      type:
      - str
    return:
      description: File-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.file.file_client.FileClient.upload_file
- class: azure.storage.file.file_client.FileClient
  fullName: azure.storage.file.file_client.FileClient.upload_range
  langs:
  - python
  module: azure.storage.file.file_client
  name: upload_range(data, start_range, end_range, validate_content=False, timeout=None,
    encoding='UTF-8', **kwargs)
  summary: Upload a range of bytes to a file.
  syntax:
    content: upload_range(data, start_range, end_range, validate_content=False, timeout=None,
      encoding='UTF-8', **kwargs)
    parameters:
    - description: The data to upload.
      id: data
      type:
      - bytes
    - description: 'Start of byte range to use for uploading a section of the file.

        The range can be up to 4 MB in size.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will upload first 512 bytes of file.'
      id: start_range
      type:
      - int
    - description: 'End of byte range to use for uploading a section of the file.

        The range can be up to 4 MB in size.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will upload first 512 bytes of file.'
      id: end_range
      type:
      - int
    - defaultValue: 'False'
      description: 'If true, calculates an MD5 hash of the page content. The storage

        service checks the hash of the content that has arrived

        with the hash that was sent. This is primarily valuable for detecting

        bitflips on the wire if using http instead of https as https (the default)

        will already validate. Note that this MD5 hash is not stored with the

        file.'
      id: validate_content
      type:
      - bool
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    - defaultValue: UTF-8
      description: Defaults to UTF-8.
      id: encoding
      type:
      - str
    return:
      description: File-updated property dict (Etag and last modified).
      type:
      - Dict[str, Any]
  type: method
  uid: azure.storage.file.file_client.FileClient.upload_range
references:
- fullName: azure.storage.file.file_client.FileClient.clear_range
  isExternal: false
  name: clear_range(start_range, end_range, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.clear_range
- fullName: azure.storage.file.file_client.FileClient.close_handles
  isExternal: false
  name: close_handles(handle=None, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.close_handles
- fullName: azure.storage.file.file_client.FileClient.copy_file_from_url
  isExternal: false
  name: copy_file_from_url(source_url, metadata=None, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.copy_file_from_url
- fullName: azure.storage.file.file_client.FileClient.create_file
  isExternal: false
  name: create_file(size, content_settings=None, metadata=None, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.create_file
- fullName: azure.storage.file.file_client.FileClient.delete_file
  isExternal: false
  name: delete_file(timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.delete_file
- fullName: azure.storage.file.file_client.FileClient.download_file
  isExternal: false
  name: download_file(offset=None, length=None, validate_content=False, timeout=None,
    **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.download_file
- fullName: azure.storage.file.file_client.FileClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, share=None, file_path=None, snapshot=None,
    credential=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.from_connection_string
- fullName: azure.storage.file.file_client.FileClient.generate_shared_access_signature
  isExternal: false
  name: generate_shared_access_signature(permission=None, expiry=None, start=None,
    policy_id=None, ip=None, protocol=None, cache_control=None, content_disposition=None,
    content_encoding=None, content_language=None, content_type=None)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.generate_shared_access_signature
- fullName: azure.storage.file.file_client.FileClient.get_file_properties
  isExternal: false
  name: get_file_properties(timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.get_file_properties
- fullName: azure.storage.file.file_client.FileClient.get_ranges
  isExternal: false
  name: get_ranges(start_range=None, end_range=None, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.get_ranges
- fullName: azure.storage.file.file_client.FileClient.list_handles
  isExternal: false
  name: list_handles(marker=None, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.list_handles
- fullName: azure.storage.file.file_client.FileClient.resize_file
  isExternal: false
  name: resize_file(size, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.resize_file
- fullName: azure.storage.file.file_client.FileClient.set_file_metadata
  isExternal: false
  name: set_file_metadata(metadata=None, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.set_file_metadata
- fullName: azure.storage.file.file_client.FileClient.set_http_headers
  isExternal: false
  name: set_http_headers(content_settings, timeout=None, **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.set_http_headers
- fullName: azure.storage.file.file_client.FileClient.upload_file
  isExternal: false
  name: upload_file(data, length=None, metadata=None, content_settings=None, validate_content=False,
    max_connections=1, timeout=None, encoding='UTF-8', **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.upload_file
- fullName: azure.storage.file.file_client.FileClient.upload_range
  isExternal: false
  name: upload_range(data, start_range, end_range, validate_content=False, timeout=None,
    encoding='UTF-8', **kwargs)
  parent: azure.storage.file.file_client.FileClient
  uid: azure.storage.file.file_client.FileClient.upload_range
- fullName: Dict[str, Any]
  name: Dict[str, Any]
  spec.python:
  - fullName: Dict
    name: Dict
    uid: Dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ']'
    name: ']'
  uid: Dict[str, Any]
- fullName: dict(str, str)
  name: dict(str, str)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: dict(str, str)
- fullName: dict(str, Any)
  name: dict(str, Any)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: )
    name: )
  uid: dict(str, Any)
- fullName: List[dict[str, int]]
  name: List[dict[str, int]]
  spec.python:
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: int
    name: int
    uid: int
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: List[dict[str, int]]
