### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
  - azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
  - azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
  - azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
  - azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
  - azure.eventprocessorhost.partition_context.PartitionContext.to_string
  class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: PartitionContext
  summary: Encapsulates information related to an Event Hubs partition used by AbstractEventProcessor.
  syntax:
    content: PartitionContext(host, partition_id, eh_path, consumer_group_name, pump_loop=None)
  type: class
  uid: azure.eventprocessorhost.partition_context.PartitionContext
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: checkpoint_async(event_processor_context=None)
  summary: "Generates a checkpoint for the partition using the curren offset and sequenceNumber\
    \ for\nand persists to the checkpoint manager.\n\n:param event_processor_context\
    \ An optional custom state value for the Event Processor.\n   This data must be\
    \ in a JSON serializable format."
  syntax:
    content: checkpoint_async(event_processor_context=None)
    parameters:
    - defaultValue: None
      id: event_processor_context
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: checkpoint_async_event_data(event_data, event_processor_context=None)
  summary: "Stores the offset and sequenceNumber from the provided received EventData\
    \ instance,\nthen writes those values to the checkpoint store via the checkpoint\
    \ manager.\nOptionally stores the state of the Event Processor along the checkpoint.\n\
    \n\n:param event_processor_context An optional custom state value for the Event\
    \ Processor.\n   This data must be in a JSON serializable format."
  syntax:
    content: checkpoint_async_event_data(event_data, event_processor_context=None)
    parameters:
    - id: event_data
    - defaultValue: None
      id: event_processor_context
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: get_initial_offset_async()
  summary: Gets the initial offset for processing the partition.
  syntax:
    content: get_initial_offset_async()
    parameters: []
    return:
      type:
      - str
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: persist_checkpoint_async(checkpoint, event_processor_context=None)
  summary: "Persists the checkpoint, and - optionally - the state of the Event Processor.\n\
    \n\n:param event_processor_context An optional custom state value for the Event\
    \ Processor.\n   This data must be in a JSON serializable format."
  syntax:
    content: persist_checkpoint_async(checkpoint, event_processor_context=None)
    parameters:
    - id: checkpoint
    - defaultValue: None
      id: event_processor_context
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: set_offset_and_sequence_number(event_data)
  summary: Updates offset based on event.
  syntax:
    content: set_offset_and_sequence_number(event_data)
    parameters:
    - description: A received EventData with valid offset and sequenceNumber.
      id: event_data
      type:
      - azure.eventhub.common.EventData
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.to_string
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: to_string()
  summary: 'Returns the parition context in the following format:

    "PartitionContext({EventHubPath}{ConsumerGroupName}{PartitionId}{SequenceNumber})"'
  syntax:
    content: to_string()
    parameters: []
    return:
      type:
      - str
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.to_string
references:
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
  isExternal: false
  name: checkpoint_async(event_processor_context=None)
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
  isExternal: false
  name: checkpoint_async_event_data(event_data, event_processor_context=None)
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
  isExternal: false
  name: get_initial_offset_async()
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
  isExternal: false
  name: persist_checkpoint_async(checkpoint, event_processor_context=None)
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
  isExternal: false
  name: set_offset_and_sequence_number(event_data)
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.to_string
  isExternal: false
  name: to_string()
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.to_string
