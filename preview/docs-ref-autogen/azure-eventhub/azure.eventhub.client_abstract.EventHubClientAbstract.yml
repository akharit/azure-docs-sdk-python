### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.client_abstract.EventHubClientAbstract.create_consumer
  - azure.eventhub.client_abstract.EventHubClientAbstract.create_producer
  - azure.eventhub.client_abstract.EventHubClientAbstract.from_connection_string
  class: azure.eventhub.client_abstract.EventHubClientAbstract
  fullName: azure.eventhub.client_abstract.EventHubClientAbstract
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.eventhub.client_abstract
  name: EventHubClientAbstract
  summary: 'The EventHubClientAbstract class defines a high level interface for sending

    events to and receiving events from the Azure Event Hubs service.'
  syntax:
    content: EventHubClientAbstract(host, event_hub_path, credential, **kwargs)
  type: class
  uid: azure.eventhub.client_abstract.EventHubClientAbstract
- class: azure.eventhub.client_abstract.EventHubClientAbstract
  fullName: azure.eventhub.client_abstract.EventHubClientAbstract.create_consumer
  langs:
  - python
  module: azure.eventhub.client_abstract
  name: create_consumer(consumer_group, partition_id, event_position, owner_level=None,
    operation=None, prefetch=None)
  syntax:
    content: create_consumer(consumer_group, partition_id, event_position, owner_level=None,
      operation=None, prefetch=None)
    parameters:
    - id: consumer_group
    - id: partition_id
    - id: event_position
    - defaultValue: None
      id: owner_level
    - defaultValue: None
      id: operation
    - defaultValue: None
      id: prefetch
  type: method
  uid: azure.eventhub.client_abstract.EventHubClientAbstract.create_consumer
- class: azure.eventhub.client_abstract.EventHubClientAbstract
  fullName: azure.eventhub.client_abstract.EventHubClientAbstract.create_producer
  langs:
  - python
  module: azure.eventhub.client_abstract
  name: create_producer(partition_id=None, operation=None, send_timeout=None)
  syntax:
    content: create_producer(partition_id=None, operation=None, send_timeout=None)
    parameters:
    - defaultValue: None
      id: partition_id
    - defaultValue: None
      id: operation
    - defaultValue: None
      id: send_timeout
  type: method
  uid: azure.eventhub.client_abstract.EventHubClientAbstract.create_producer
- class: azure.eventhub.client_abstract.EventHubClientAbstract
  fullName: azure.eventhub.client_abstract.EventHubClientAbstract.from_connection_string
  langs:
  - python
  module: azure.eventhub.client_abstract
  name: from_connection_string(conn_str, event_hub_path=None, **kwargs)
  summary: Create an EventHubClient from an EventHub/IotHub connection string.
  syntax:
    content: from_connection_string(conn_str, event_hub_path=None, **kwargs)
    parameters:
    - description: The connection string of an eventhub or IoT hub
      id: conn_str
      type:
      - str
    - description: 'The path of the specific Event Hub to connect the client to, if
        the EntityName is

        not included in the connection string.'
      id: event_hub_path
      type:
      - str
    - defaultValue: None
      description: 'Whether to output network trace logs to the logger. Default

        is *False*.'
      id: network_tracing
      type:
      - bool
    - description: 'HTTP proxy settings. This must be a dictionary with the following

        keys: ''proxy_hostname'' (str value) and ''proxy_port'' (int value).

        Additionally the following keys may also be present: ''username'', ''password''.'
      id: http_proxy
      type:
      - dict[str, Any]
    - description: 'The time in seconds to wait for a token to be authorized by the
        service.

        The default value is 60 seconds. If set to 0, no timeout will be enforced
        from the client.'
      id: auth_timeout
      type:
      - float
    - description: The user agent that needs to be appended to the built in user agent
        string.
      id: user_agent
      type:
      - str
    - description: 'The max number of attempts to redo the failed operation when an
        error happened. Default

        value is 3.'
      id: max_retries
      type:
      - int
    - description: 'The type of transport protocol that will be used for communicating
        with

        the Event Hubs service. Default is ~azure.eventhub.TransportType.Amqp.'
      id: transport_type
      type:
      - azure.eventhub.TransportType
    - description: The message prefetch count of the consumer. Default is 300.
      id: prefetch
      type:
      - int
    - description: 'Receive a batch of events. Batch size will be up to the maximum
        specified, but

        will return as soon as service returns no new events. Default value is the
        same as prefetch.'
      id: max_batch_size
      type:
      - int
    - description: 'The timeout in seconds to receive a batch of events from an Event
        Hub.

        Default value is 0 seconds.'
      id: receive_timeout
      type:
      - float
    - description: 'The timeout in seconds for an individual event to be sent from
        the time that it is

        queued. Default value is 60 seconds. If set to 0, there will be no timeout.'
      id: send_timeout
      type:
      - float
  type: method
  uid: azure.eventhub.client_abstract.EventHubClientAbstract.from_connection_string
references:
- fullName: azure.eventhub.client_abstract.EventHubClientAbstract.create_consumer
  isExternal: false
  name: create_consumer(consumer_group, partition_id, event_position, owner_level=None,
    operation=None, prefetch=None)
  parent: azure.eventhub.client_abstract.EventHubClientAbstract
  uid: azure.eventhub.client_abstract.EventHubClientAbstract.create_consumer
- fullName: azure.eventhub.client_abstract.EventHubClientAbstract.create_producer
  isExternal: false
  name: create_producer(partition_id=None, operation=None, send_timeout=None)
  parent: azure.eventhub.client_abstract.EventHubClientAbstract
  uid: azure.eventhub.client_abstract.EventHubClientAbstract.create_producer
- fullName: azure.eventhub.client_abstract.EventHubClientAbstract.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, event_hub_path=None, **kwargs)
  parent: azure.eventhub.client_abstract.EventHubClientAbstract
  uid: azure.eventhub.client_abstract.EventHubClientAbstract.from_connection_string
- fullName: dict[str, Any]
  name: dict[str, Any]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ']'
    name: ']'
  uid: dict[str, Any]
