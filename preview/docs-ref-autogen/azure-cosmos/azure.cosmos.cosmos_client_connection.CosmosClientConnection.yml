### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.Create
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachment
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachmentAndUploadMedia
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateContainer
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateDatabase
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateItem
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreatePermission
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateStoredProcedure
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateTrigger
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUser
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUserDefinedFunction
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteAttachment
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteConflict
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteContainer
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteDatabase
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteItem
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeletePermission
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteResource
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteStoredProcedure
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteTrigger
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUser
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUserDefinedFunction
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ExecuteStoredProcedure
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetDatabaseAccount
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetPartitionResolver
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryAttachments
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryConflicts
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryContainers
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryDatabases
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryFeed
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItems
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItemsChangeFeed
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryOffers
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryPermissions
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryStoredProcedures
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryTriggers
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUserDefinedFunctions
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUsers
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.Read
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachment
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachments
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflict
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflicts
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainer
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainers
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabase
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabases
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadEndpoint
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItem
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItems
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadMedia
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffer
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffers
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermission
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermissions
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedure
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedures
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTrigger
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTriggers
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUser
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunction
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunctions
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUsers
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.RegisterPartitionResolver
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.Replace
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceAttachment
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceContainer
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceItem
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceOffer
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplacePermission
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceStoredProcedure
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceTrigger
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUser
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUserDefinedFunction
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.Session
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpdateMedia
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.Upsert
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachment
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachmentAndUploadMedia
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertItem
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertPermission
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertStoredProcedure
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertTrigger
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUser
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUserDefinedFunction
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.WriteEndpoint
  - azure.cosmos.cosmos_client_connection.CosmosClientConnection.PartitionResolverErrorMessage
  class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CosmosClientConnection
  summary: 'Represents a document client.


    Provides a client-side logical representation of the Azure Cosmos

    service. This client is used to configure and execute requests against the

    service.


    The service client encapsulates the endpoint and credentials used to access

    the Azure Cosmos service.'
  syntax:
    content: CosmosClientConnection(url_connection, auth, connection_policy=None,
      consistency_level='Session')
  type: class
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Create
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: Create(body, path, type, id, initial_headers, options=None)
  summary: Creates a Azure Cosmos resource and returns it.
  syntax:
    content: Create(body, path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: body
      type:
      - dict
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The created Azure Cosmos resource.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Create
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachment
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateAttachment(document_link, attachment, options=None)
  summary: Creates an attachment in a document.
  syntax:
    content: CreateAttachment(document_link, attachment, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - description: The Azure Cosmos attachment to create.
      id: attachment
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The created Attachment.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachment
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachmentAndUploadMedia
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateAttachmentAndUploadMedia(document_link, readable_stream, options=None)
  summary: Creates an attachment and upload media.
  syntax:
    content: CreateAttachmentAndUploadMedia(document_link, readable_stream, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - description: ''
      id: stream object) readable_stream
      type:
      - (file-like
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The created Attachment.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachmentAndUploadMedia
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateContainer
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateContainer(database_link, collection, options=None)
  summary: Creates a collection in a database.
  syntax:
    content: CreateContainer(database_link, collection, options=None)
    parameters:
    - description: The link to the database.
      id: database_link
      type:
      - str
    - description: The Azure Cosmos collection to create.
      id: collection
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The Collection that was created.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateContainer
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateDatabase
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateDatabase(database, options=None)
  summary: Creates a database.
  syntax:
    content: CreateDatabase(database, options=None)
    parameters:
    - description: The Azure Cosmos database to create.
      id: database
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The Database that was created.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateDatabase
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateItem
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateItem(database_or_Container_link, document, options=None)
  summary: Creates a document in a collection.
  syntax:
    content: CreateItem(database_or_Container_link, document, options=None)
    parameters:
    - description: The link to the database when using partitioning, otherwise link
        to the document collection.
      id: database_or_Container_link
      type:
      - str
    - description: The Azure Cosmos document to create.
      id: document
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    - description: 'Disables the automatic id generation. If id is missing in the
        body and this

        option is true, an error will be returned.'
      id: options['disableAutomaticIdGeneration']
      type:
      - bool
    return:
      description: The created Document.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateItem
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreatePermission
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreatePermission(user_link, permission, options=None)
  summary: Creates a permission for a user.
  syntax:
    content: CreatePermission(user_link, permission, options=None)
    parameters:
    - description: The link to the user entity.
      id: user_link
      type:
      - str
    - description: The Azure Cosmos user permission to create.
      id: permission
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The created Permission.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreatePermission
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateStoredProcedure
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateStoredProcedure(collection_link, sproc, options=None)
  summary: Creates a stored procedure in a collection.
  syntax:
    content: CreateStoredProcedure(collection_link, sproc, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: sproc
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The created Stored Procedure.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateStoredProcedure
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateTrigger
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateTrigger(collection_link, trigger, options=None)
  summary: Creates a trigger in a collection.
  syntax:
    content: CreateTrigger(collection_link, trigger, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: trigger
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The created Trigger.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateTrigger
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUser
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateUser(database_link, user, options=None)
  summary: Creates a user.
  syntax:
    content: CreateUser(database_link, user, options=None)
    parameters:
    - description: The link to the database.
      id: database_link
      type:
      - str
    - description: The Azure Cosmos user to create.
      id: user
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The created User.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUser
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUserDefinedFunction
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: CreateUserDefinedFunction(collection_link, udf, options=None)
  summary: Creates a user defined function in a collection.
  syntax:
    content: CreateUserDefinedFunction(collection_link, udf, options=None)
    parameters:
    - description: The link to the collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: udf
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The created UDF.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUserDefinedFunction
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteAttachment
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteAttachment(attachment_link, options=None)
  summary: Deletes an attachment.
  syntax:
    content: DeleteAttachment(attachment_link, options=None)
    parameters:
    - description: The link to the attachment.
      id: attachment_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Attachment.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteAttachment
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteConflict
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteConflict(conflict_link, options=None)
  summary: Deletes a conflict.
  syntax:
    content: DeleteConflict(conflict_link, options=None)
    parameters:
    - description: The link to the conflict.
      id: conflict_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Conflict.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteConflict
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteContainer
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteContainer(collection_link, options=None)
  summary: Deletes a collection.
  syntax:
    content: DeleteContainer(collection_link, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Collection.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteContainer
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteDatabase
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteDatabase(database_link, options=None)
  summary: Deletes a database.
  syntax:
    content: DeleteDatabase(database_link, options=None)
    parameters:
    - description: The link to the database.
      id: database_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Database.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteDatabase
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteItem
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteItem(document_link, options=None)
  summary: Deletes a document.
  syntax:
    content: DeleteItem(document_link, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Document.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteItem
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeletePermission
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeletePermission(permission_link, options=None)
  summary: Deletes a permission.
  syntax:
    content: DeletePermission(permission_link, options=None)
    parameters:
    - description: The link to the permission.
      id: permission_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Permission.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeletePermission
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteResource
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteResource(path, type, id, initial_headers, options=None)
  summary: Deletes a Azure Cosmos resource and returns it.
  syntax:
    content: DeleteResource(path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Azure Cosmos resource.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteResource
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteStoredProcedure
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteStoredProcedure(sproc_link, options=None)
  summary: Deletes a stored procedure.
  syntax:
    content: DeleteStoredProcedure(sproc_link, options=None)
    parameters:
    - description: The link to the stored procedure.
      id: sproc_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Stored Procedure.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteStoredProcedure
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteTrigger
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteTrigger(trigger_link, options=None)
  summary: Deletes a trigger.
  syntax:
    content: DeleteTrigger(trigger_link, options=None)
    parameters:
    - description: The link to the trigger.
      id: trigger_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted Trigger.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteTrigger
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUser
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteUser(user_link, options=None)
  summary: Deletes a user.
  syntax:
    content: DeleteUser(user_link, options=None)
    parameters:
    - description: The link to the user entity.
      id: user_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted user.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUser
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUserDefinedFunction
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: DeleteUserDefinedFunction(udf_link, options=None)
  summary: Deletes a user defined function.
  syntax:
    content: DeleteUserDefinedFunction(udf_link, options=None)
    parameters:
    - description: The link to the user defined function.
      id: udf_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The deleted UDF.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUserDefinedFunction
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ExecuteStoredProcedure
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ExecuteStoredProcedure(sproc_link, params, options=None)
  summary: Executes a store procedure.
  syntax:
    content: ExecuteStoredProcedure(sproc_link, params, options=None)
    parameters:
    - description: The link to the stored procedure.
      id: sproc_link
      type:
      - str
    - description: List or None
      id: params
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The Stored Procedure response.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ExecuteStoredProcedure
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetDatabaseAccount
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: GetDatabaseAccount(url_connection=None)
  summary: Gets database account info.
  syntax:
    content: GetDatabaseAccount(url_connection=None)
    parameters:
    - defaultValue: None
      id: url_connection
    return:
      description: The Database Account.
      type:
      - documents.DatabaseAccount
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetDatabaseAccount
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetPartitionResolver
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: GetPartitionResolver(database_link)
  summary: Gets the partition resolver associated with the database link
  syntax:
    content: GetPartitionResolver(database_link)
    parameters:
    - description: Database self link or ID based link.
      id: database_link
      type:
      - str
    return:
      description: An instance of PartitionResolver.
      type:
      - object
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetPartitionResolver
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryAttachments
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryAttachments(document_link, query, options=None)
  summary: Queries attachments in a document.
  syntax:
    content: QueryAttachments(document_link, query, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Attachments.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryAttachments
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryConflicts
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryConflicts(collection_link, query, options=None)
  summary: Queries conflicts in a collection.
  syntax:
    content: QueryConflicts(collection_link, query, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Conflicts.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryConflicts
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryContainers
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryContainers(database_link, query, options=None)
  summary: Queries collections in a database.
  syntax:
    content: QueryContainers(database_link, query, options=None)
    parameters:
    - description: The link to the database.
      id: database_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Collections.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryContainers
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryDatabases
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryDatabases(query, options=None)
  summary: Queries databases.
  syntax:
    content: QueryDatabases(query, options=None)
    parameters:
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Databases.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryDatabases
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryFeed
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryFeed(path, collection_id, query, options, partition_key_range_id=None)
  summary: Query Feed for Document Collection resource.
  syntax:
    content: QueryFeed(path, collection_id, query, options, partition_key_range_id=None)
    parameters:
    - description: Path to the document collection.
      id: path
      type:
      - str
    - description: Id of the document collection.
      id: collection_id
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - description: The request options for the request.
      id: options
      type:
      - dict
    - defaultValue: None
      description: Partition key range id.
      id: partition_key_range_id
      type:
      - str
    return:
      type:
      - tuple
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryFeed
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItems
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryItems(database_or_Container_link, query, options=None, partition_key=None,
    response_hook=None)
  summary: Queries documents in a collection.
  syntax:
    content: QueryItems(database_or_Container_link, query, options=None, partition_key=None,
      response_hook=None)
    parameters:
    - description: The link to the database when using partitioning, otherwise link
        to the document collection.
      id: database_or_Container_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    - defaultValue: None
      description: Partition key for the query(default value None)
      id: partition_key
      type:
      - str
    - defaultValue: None
      description: A callable invoked with the response metadata
      id: response_hook
    return:
      description: Query Iterable of Documents.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItems
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItemsChangeFeed
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryItemsChangeFeed(collection_link, options=None, response_hook=None)
  summary: Queries documents change feed in a collection.
  syntax:
    content: QueryItemsChangeFeed(collection_link, options=None, response_hook=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        options may also specify partition key range id.'
      id: options
      type:
      - dict
    - defaultValue: None
      description: A callable invoked with the response metadata
      id: response_hook
    return:
      description: Query Iterable of Documents.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItemsChangeFeed
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryOffers
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryOffers(query, options=None)
  summary: Query for all offers.
  syntax:
    content: QueryOffers(query, options=None)
    parameters:
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Offers.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryOffers
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryPermissions
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryPermissions(user_link, query, options=None)
  summary: Queries permissions for a user.
  syntax:
    content: QueryPermissions(user_link, query, options=None)
    parameters:
    - description: The link to the user entity.
      id: user_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Permissions.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryPermissions
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryStoredProcedures
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryStoredProcedures(collection_link, query, options=None)
  summary: Queries stored procedures in a collection.
  syntax:
    content: QueryStoredProcedures(collection_link, query, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Stored Procedures.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryStoredProcedures
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryTriggers
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryTriggers(collection_link, query, options=None)
  summary: Queries triggers in a collection.
  syntax:
    content: QueryTriggers(collection_link, query, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Triggers.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryTriggers
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUserDefinedFunctions
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryUserDefinedFunctions(collection_link, query, options=None)
  summary: Queries user defined functions in a collection.
  syntax:
    content: QueryUserDefinedFunctions(collection_link, query, options=None)
    parameters:
    - description: The link to the collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of UDFs.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUserDefinedFunctions
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUsers
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: QueryUsers(database_link, query, options=None)
  summary: Queries users in a database.
  syntax:
    content: QueryUsers(database_link, query, options=None)
    parameters:
    - description: The link to the database.
      id: database_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Users.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUsers
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Read
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: Read(path, type, id, initial_headers, options=None)
  summary: Reads a Azure Cosmos resource and returns it.
  syntax:
    content: Read(path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted Azure Cosmos resource.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Read
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachment
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadAttachment(attachment_link, options=None)
  summary: Reads an attachment.
  syntax:
    content: ReadAttachment(attachment_link, options=None)
    parameters:
    - description: The link to the attachment.
      id: attachment_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The read Attachment.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachment
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachments
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadAttachments(document_link, options=None)
  summary: Reads all attachments in a document.
  syntax:
    content: ReadAttachments(document_link, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Attachments.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachments
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflict
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadConflict(conflict_link, options=None)
  summary: Reads a conflict.
  syntax:
    content: ReadConflict(conflict_link, options=None)
    parameters:
    - description: The link to the conflict.
      id: conflict_link
      type:
      - str
    - defaultValue: None
      description: ''
      id: options
      type:
      - dict
    return:
      description: The read Conflict.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflict
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflicts
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadConflicts(collection_link, feed_options=None)
  summary: Reads conflicts.
  syntax:
    content: ReadConflicts(collection_link, feed_options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: ''
      id: feed_options
      type:
      - dict
    return:
      description: Query Iterable of Conflicts.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflicts
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainer
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadContainer(collection_link, options=None)
  summary: Reads a collection.
  syntax:
    content: ReadContainer(collection_link, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The read Collection.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainer
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainers
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadContainers(database_link, options=None)
  summary: Reads all collections in a database.
  syntax:
    content: ReadContainers(database_link, options=None)
    parameters:
    - description: The link to the database.
      id: database_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Collections.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainers
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabase
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadDatabase(database_link, options=None)
  summary: Reads a database.
  syntax:
    content: ReadDatabase(database_link, options=None)
    parameters:
    - description: The link to the database.
      id: database_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The Database that was read.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabase
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabases
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadDatabases(options=None)
  summary: Reads all databases.
  syntax:
    content: ReadDatabases(options=None)
    parameters:
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Databases.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabases
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadEndpoint
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadEndpoint
  summary: Gets the curent read endpoint for a geo-replicated database account.
  syntax: {}
  type: attribute
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadEndpoint
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItem
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadItem(document_link, options=None)
  summary: Reads a document.
  syntax:
    content: ReadItem(document_link, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The read Document.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItem
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItems
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadItems(collection_link, feed_options=None, response_hook=None)
  summary: Reads all documents in a collection.
  syntax:
    content: ReadItems(collection_link, feed_options=None, response_hook=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: ''
      id: feed_options
      type:
      - dict
    - defaultValue: None
      id: response_hook
    return:
      description: Query Iterable of Documents.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItems
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadMedia
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadMedia(media_link)
  summary: 'Reads a media.


    When self.connection_policy.MediaReadMode ==

    documents.MediaReadMode.Streamed, returns a file-like stream object;

    otherwise, returns a str.'
  syntax:
    content: ReadMedia(media_link)
    parameters:
    - description: The link to the media.
      id: media_link
      type:
      - str
    return:
      description: The read Media.
      type:
      - str
      - file-like stream object
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadMedia
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffer
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadOffer(offer_link)
  summary: Reads an offer.
  syntax:
    content: ReadOffer(offer_link)
    parameters:
    - description: The link to the offer.
      id: offer_link
      type:
      - str
    return:
      description: The read Offer.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffer
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffers
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadOffers(options=None)
  summary: Reads all offers.
  syntax:
    content: ReadOffers(options=None)
    parameters:
    - defaultValue: None
      description: The request options for the request
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Offers.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffers
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermission
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadPermission(permission_link, options=None)
  summary: Reads a permission.
  syntax:
    content: ReadPermission(permission_link, options=None)
    parameters:
    - description: The link to the permission.
      id: permission_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The read permission.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermission
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermissions
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadPermissions(user_link, options=None)
  summary: Reads all permissions for a user.
  syntax:
    content: ReadPermissions(user_link, options=None)
    parameters:
    - description: The link to the user entity.
      id: user_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Permissions.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermissions
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedure
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadStoredProcedure(sproc_link, options=None)
  summary: Reads a stored procedure.
  syntax:
    content: ReadStoredProcedure(sproc_link, options=None)
    parameters:
    - description: The link to the stored procedure.
      id: sproc_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The read Stored Procedure.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedure
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedures
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadStoredProcedures(collection_link, options=None)
  summary: Reads all store procedures in a collection.
  syntax:
    content: ReadStoredProcedures(collection_link, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Stored Procedures.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedures
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTrigger
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadTrigger(trigger_link, options=None)
  summary: Reads a trigger.
  syntax:
    content: ReadTrigger(trigger_link, options=None)
    parameters:
    - description: The link to the trigger.
      id: trigger_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The read Trigger.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTrigger
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTriggers
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadTriggers(collection_link, options=None)
  summary: Reads all triggers in a collection.
  syntax:
    content: ReadTriggers(collection_link, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of Triggers.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTriggers
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUser
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadUser(user_link, options=None)
  summary: Reads a user.
  syntax:
    content: ReadUser(user_link, options=None)
    parameters:
    - description: The link to the user entity.
      id: user_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The read User.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUser
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunction
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadUserDefinedFunction(udf_link, options=None)
  summary: Reads a user defined function.
  syntax:
    content: ReadUserDefinedFunction(udf_link, options=None)
    parameters:
    - description: The link to the user defined function.
      id: udf_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The read UDF.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunction
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunctions
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadUserDefinedFunctions(collection_link, options=None)
  summary: Reads all user defined functions in a collection.
  syntax:
    content: ReadUserDefinedFunctions(collection_link, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: Query Iterable of UDFs.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunctions
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUsers
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReadUsers(database_link, options=None)
  summary: Reads all users in a database.
  syntax:
    content: ReadUsers(database_link, options=None)
    parameters:
    - id: database_link
    - defaultValue: None
      id: options
    return:
      description: Query iterable of Users.
      type:
      - query_iterable.QueryIterable
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUsers
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.RegisterPartitionResolver
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: RegisterPartitionResolver(database_link, partition_resolver)
  summary: Registers the partition resolver associated with the database link
  syntax:
    content: RegisterPartitionResolver(database_link, partition_resolver)
    parameters:
    - description: Database Self Link or ID based link.
      id: database_link
      type:
      - str
    - description: An instance of PartitionResolver.
      id: partition_resolver
      type:
      - object
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.RegisterPartitionResolver
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Replace
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: Replace(resource, path, type, id, initial_headers, options=None)
  summary: Replaces a Azure Cosmos resource and returns it.
  syntax:
    content: Replace(resource, path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: resource
      type:
      - dict
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The new Azure Cosmos resource.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Replace
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceAttachment
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplaceAttachment(attachment_link, attachment, options=None)
  summary: Replaces an attachment and returns it.
  syntax:
    content: ReplaceAttachment(attachment_link, attachment, options=None)
    parameters:
    - description: The link to the attachment.
      id: attachment_link
      type:
      - str
    - description: ''
      id: attachment
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The replaced Attachment
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceAttachment
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceContainer
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplaceContainer(collection_link, collection, options=None)
  summary: Replaces a collection and return it.
  syntax:
    content: ReplaceContainer(collection_link, collection, options=None)
    parameters:
    - description: The link to the collection entity.
      id: collection_link
      type:
      - str
    - description: The collection to be used.
      id: collection
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The new Collection.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceContainer
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceItem
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplaceItem(document_link, new_document, options=None)
  summary: Replaces a document and returns it.
  syntax:
    content: ReplaceItem(document_link, new_document, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - description: ''
      id: new_document
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The new Document.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceItem
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceOffer
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplaceOffer(offer_link, offer)
  summary: Replaces an offer and returns it.
  syntax:
    content: ReplaceOffer(offer_link, offer)
    parameters:
    - description: The link to the offer.
      id: offer_link
      type:
      - str
    - description: ''
      id: offer
      type:
      - dict
    return:
      description: The replaced Offer.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceOffer
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplacePermission
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplacePermission(permission_link, permission, options=None)
  summary: Replaces a permission and return it.
  syntax:
    content: ReplacePermission(permission_link, permission, options=None)
    parameters:
    - description: The link to the permission.
      id: permission_link
      type:
      - str
    - description: ''
      id: permission
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The new Permission.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplacePermission
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceStoredProcedure
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplaceStoredProcedure(sproc_link, sproc, options=None)
  summary: Replaces a stored procedure and returns it.
  syntax:
    content: ReplaceStoredProcedure(sproc_link, sproc, options=None)
    parameters:
    - description: The link to the stored procedure.
      id: sproc_link
      type:
      - str
    - description: ''
      id: sproc
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The replaced Stored Procedure.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceStoredProcedure
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceTrigger
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplaceTrigger(trigger_link, trigger, options=None)
  summary: Replaces a trigger and returns it.
  syntax:
    content: ReplaceTrigger(trigger_link, trigger, options=None)
    parameters:
    - description: The link to the trigger.
      id: trigger_link
      type:
      - str
    - description: ''
      id: trigger
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The replaced Trigger.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceTrigger
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUser
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplaceUser(user_link, user, options=None)
  summary: Replaces a user and return it.
  syntax:
    content: ReplaceUser(user_link, user, options=None)
    parameters:
    - description: The link to the user entity.
      id: user_link
      type:
      - str
    - description: ''
      id: user
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The new User.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUser
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUserDefinedFunction
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: ReplaceUserDefinedFunction(udf_link, udf, options=None)
  summary: Replaces a user defined function and returns it.
  syntax:
    content: ReplaceUserDefinedFunction(udf_link, udf, options=None)
    parameters:
    - description: The link to the user defined function.
      id: udf_link
      type:
      - str
    - description: ''
      id: udf
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The new UDF.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUserDefinedFunction
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Session
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: Session
  summary: Gets the session object from the client
  syntax: {}
  type: attribute
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Session
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpdateMedia
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpdateMedia(media_link, readable_stream, options=None)
  summary: Updates a media and returns it.
  syntax:
    content: UpdateMedia(media_link, readable_stream, options=None)
    parameters:
    - description: The link to the media.
      id: media_link
      type:
      - str
    - description: ''
      id: stream object) readable_stream
      type:
      - (file-like
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The updated Media.
      type:
      - str
      - file-like stream object
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpdateMedia
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Upsert
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: Upsert(body, path, type, id, initial_headers, options=None)
  summary: Upserts a Azure Cosmos resource and returns it.
  syntax:
    content: Upsert(body, path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: body
      type:
      - dict
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted Azure Cosmos resource.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Upsert
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachment
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpsertAttachment(document_link, attachment, options=None)
  summary: Upserts an attachment in a document.
  syntax:
    content: UpsertAttachment(document_link, attachment, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - description: The Azure Cosmos attachment to upsert.
      id: attachment
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted Attachment.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachment
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachmentAndUploadMedia
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpsertAttachmentAndUploadMedia(document_link, readable_stream, options=None)
  summary: Upserts an attachment and upload media.
  syntax:
    content: UpsertAttachmentAndUploadMedia(document_link, readable_stream, options=None)
    parameters:
    - description: The link to the document.
      id: document_link
      type:
      - str
    - description: ''
      id: stream object) readable_stream
      type:
      - (file-like
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted Attachment.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachmentAndUploadMedia
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertItem
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpsertItem(database_or_Container_link, document, options=None)
  summary: Upserts a document in a collection.
  syntax:
    content: UpsertItem(database_or_Container_link, document, options=None)
    parameters:
    - description: The link to the database when using partitioning, otherwise link
        to the document collection.
      id: database_or_Container_link
      type:
      - str
    - description: The Azure Cosmos document to upsert.
      id: document
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    - description: 'Disables the automatic id generation. If id is missing in the
        body and this

        option is true, an error will be returned.'
      id: options['disableAutomaticIdGeneration']
      type:
      - bool
    return:
      description: The upserted Document.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertItem
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertPermission
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpsertPermission(user_link, permission, options=None)
  summary: Upserts a permission for a user.
  syntax:
    content: UpsertPermission(user_link, permission, options=None)
    parameters:
    - description: The link to the user entity.
      id: user_link
      type:
      - str
    - description: The Azure Cosmos user permission to upsert.
      id: permission
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted permission.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertPermission
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertStoredProcedure
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpsertStoredProcedure(collection_link, sproc, options=None)
  summary: Upserts a stored procedure in a collection.
  syntax:
    content: UpsertStoredProcedure(collection_link, sproc, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: sproc
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted Stored Procedure.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertStoredProcedure
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertTrigger
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpsertTrigger(collection_link, trigger, options=None)
  summary: Upserts a trigger in a collection.
  syntax:
    content: UpsertTrigger(collection_link, trigger, options=None)
    parameters:
    - description: The link to the document collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: trigger
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted Trigger.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertTrigger
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUser
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpsertUser(database_link, user, options=None)
  summary: Upserts a user.
  syntax:
    content: UpsertUser(database_link, user, options=None)
    parameters:
    - description: The link to the database.
      id: database_link
      type:
      - str
    - description: The Azure Cosmos user to upsert.
      id: user
      type:
      - dict
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted User.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUser
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUserDefinedFunction
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: UpsertUserDefinedFunction(collection_link, udf, options=None)
  summary: Upserts a user defined function in a collection.
  syntax:
    content: UpsertUserDefinedFunction(collection_link, udf, options=None)
    parameters:
    - description: The link to the collection.
      id: collection_link
      type:
      - str
    - description: ''
      id: udf
      type:
      - str
    - defaultValue: None
      description: The request options for the request.
      id: options
      type:
      - dict
    return:
      description: The upserted UDF.
      type:
      - dict
  type: method
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUserDefinedFunction
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.WriteEndpoint
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: WriteEndpoint
  summary: Gets the curent write endpoint for a geo-replicated database account.
  syntax: {}
  type: attribute
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.WriteEndpoint
- class: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.PartitionResolverErrorMessage
  langs:
  - python
  module: azure.cosmos.cosmos_client_connection
  name: PartitionResolverErrorMessage
  syntax:
    content: PartitionResolverErrorMessage = "Couldn't find any partition resolvers
      for the database link provided. Ensure that the link you used when registering
      the partition resolvers matches the link provided or you need to register both
      types of database link(self link as well as ID based link)."
  type: attribute
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.PartitionResolverErrorMessage
references:
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Create
  isExternal: false
  name: Create(body, path, type, id, initial_headers, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Create
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachment
  isExternal: false
  name: CreateAttachment(document_link, attachment, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachment
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachmentAndUploadMedia
  isExternal: false
  name: CreateAttachmentAndUploadMedia(document_link, readable_stream, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateAttachmentAndUploadMedia
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateContainer
  isExternal: false
  name: CreateContainer(database_link, collection, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateContainer
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateDatabase
  isExternal: false
  name: CreateDatabase(database, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateDatabase
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateItem
  isExternal: false
  name: CreateItem(database_or_Container_link, document, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateItem
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreatePermission
  isExternal: false
  name: CreatePermission(user_link, permission, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreatePermission
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateStoredProcedure
  isExternal: false
  name: CreateStoredProcedure(collection_link, sproc, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateStoredProcedure
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateTrigger
  isExternal: false
  name: CreateTrigger(collection_link, trigger, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateTrigger
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUser
  isExternal: false
  name: CreateUser(database_link, user, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUser
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUserDefinedFunction
  isExternal: false
  name: CreateUserDefinedFunction(collection_link, udf, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.CreateUserDefinedFunction
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteAttachment
  isExternal: false
  name: DeleteAttachment(attachment_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteAttachment
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteConflict
  isExternal: false
  name: DeleteConflict(conflict_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteConflict
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteContainer
  isExternal: false
  name: DeleteContainer(collection_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteContainer
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteDatabase
  isExternal: false
  name: DeleteDatabase(database_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteDatabase
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteItem
  isExternal: false
  name: DeleteItem(document_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteItem
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeletePermission
  isExternal: false
  name: DeletePermission(permission_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeletePermission
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteResource
  isExternal: false
  name: DeleteResource(path, type, id, initial_headers, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteResource
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteStoredProcedure
  isExternal: false
  name: DeleteStoredProcedure(sproc_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteStoredProcedure
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteTrigger
  isExternal: false
  name: DeleteTrigger(trigger_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteTrigger
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUser
  isExternal: false
  name: DeleteUser(user_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUser
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUserDefinedFunction
  isExternal: false
  name: DeleteUserDefinedFunction(udf_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.DeleteUserDefinedFunction
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ExecuteStoredProcedure
  isExternal: false
  name: ExecuteStoredProcedure(sproc_link, params, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ExecuteStoredProcedure
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetDatabaseAccount
  isExternal: false
  name: GetDatabaseAccount(url_connection=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetDatabaseAccount
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetPartitionResolver
  isExternal: false
  name: GetPartitionResolver(database_link)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.GetPartitionResolver
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryAttachments
  isExternal: false
  name: QueryAttachments(document_link, query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryAttachments
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryConflicts
  isExternal: false
  name: QueryConflicts(collection_link, query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryConflicts
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryContainers
  isExternal: false
  name: QueryContainers(database_link, query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryContainers
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryDatabases
  isExternal: false
  name: QueryDatabases(query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryDatabases
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryFeed
  isExternal: false
  name: QueryFeed(path, collection_id, query, options, partition_key_range_id=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryFeed
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItems
  isExternal: false
  name: QueryItems(database_or_Container_link, query, options=None, partition_key=None,
    response_hook=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItems
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItemsChangeFeed
  isExternal: false
  name: QueryItemsChangeFeed(collection_link, options=None, response_hook=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryItemsChangeFeed
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryOffers
  isExternal: false
  name: QueryOffers(query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryOffers
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryPermissions
  isExternal: false
  name: QueryPermissions(user_link, query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryPermissions
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryStoredProcedures
  isExternal: false
  name: QueryStoredProcedures(collection_link, query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryStoredProcedures
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryTriggers
  isExternal: false
  name: QueryTriggers(collection_link, query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryTriggers
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUserDefinedFunctions
  isExternal: false
  name: QueryUserDefinedFunctions(collection_link, query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUserDefinedFunctions
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUsers
  isExternal: false
  name: QueryUsers(database_link, query, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.QueryUsers
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Read
  isExternal: false
  name: Read(path, type, id, initial_headers, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Read
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachment
  isExternal: false
  name: ReadAttachment(attachment_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachment
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachments
  isExternal: false
  name: ReadAttachments(document_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadAttachments
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflict
  isExternal: false
  name: ReadConflict(conflict_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflict
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflicts
  isExternal: false
  name: ReadConflicts(collection_link, feed_options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadConflicts
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainer
  isExternal: false
  name: ReadContainer(collection_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainer
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainers
  isExternal: false
  name: ReadContainers(database_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadContainers
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabase
  isExternal: false
  name: ReadDatabase(database_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabase
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabases
  isExternal: false
  name: ReadDatabases(options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadDatabases
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadEndpoint
  isExternal: false
  name: ReadEndpoint
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadEndpoint
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItem
  isExternal: false
  name: ReadItem(document_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItem
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItems
  isExternal: false
  name: ReadItems(collection_link, feed_options=None, response_hook=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadItems
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadMedia
  isExternal: false
  name: ReadMedia(media_link)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadMedia
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffer
  isExternal: false
  name: ReadOffer(offer_link)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffer
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffers
  isExternal: false
  name: ReadOffers(options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadOffers
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermission
  isExternal: false
  name: ReadPermission(permission_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermission
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermissions
  isExternal: false
  name: ReadPermissions(user_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadPermissions
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedure
  isExternal: false
  name: ReadStoredProcedure(sproc_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedure
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedures
  isExternal: false
  name: ReadStoredProcedures(collection_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadStoredProcedures
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTrigger
  isExternal: false
  name: ReadTrigger(trigger_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTrigger
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTriggers
  isExternal: false
  name: ReadTriggers(collection_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadTriggers
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUser
  isExternal: false
  name: ReadUser(user_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUser
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunction
  isExternal: false
  name: ReadUserDefinedFunction(udf_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunction
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunctions
  isExternal: false
  name: ReadUserDefinedFunctions(collection_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUserDefinedFunctions
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUsers
  isExternal: false
  name: ReadUsers(database_link, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReadUsers
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.RegisterPartitionResolver
  isExternal: false
  name: RegisterPartitionResolver(database_link, partition_resolver)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.RegisterPartitionResolver
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Replace
  isExternal: false
  name: Replace(resource, path, type, id, initial_headers, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Replace
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceAttachment
  isExternal: false
  name: ReplaceAttachment(attachment_link, attachment, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceAttachment
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceContainer
  isExternal: false
  name: ReplaceContainer(collection_link, collection, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceContainer
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceItem
  isExternal: false
  name: ReplaceItem(document_link, new_document, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceItem
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceOffer
  isExternal: false
  name: ReplaceOffer(offer_link, offer)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceOffer
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplacePermission
  isExternal: false
  name: ReplacePermission(permission_link, permission, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplacePermission
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceStoredProcedure
  isExternal: false
  name: ReplaceStoredProcedure(sproc_link, sproc, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceStoredProcedure
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceTrigger
  isExternal: false
  name: ReplaceTrigger(trigger_link, trigger, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceTrigger
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUser
  isExternal: false
  name: ReplaceUser(user_link, user, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUser
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUserDefinedFunction
  isExternal: false
  name: ReplaceUserDefinedFunction(udf_link, udf, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.ReplaceUserDefinedFunction
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Session
  isExternal: false
  name: Session
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Session
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpdateMedia
  isExternal: false
  name: UpdateMedia(media_link, readable_stream, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpdateMedia
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Upsert
  isExternal: false
  name: Upsert(body, path, type, id, initial_headers, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.Upsert
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachment
  isExternal: false
  name: UpsertAttachment(document_link, attachment, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachment
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachmentAndUploadMedia
  isExternal: false
  name: UpsertAttachmentAndUploadMedia(document_link, readable_stream, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertAttachmentAndUploadMedia
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertItem
  isExternal: false
  name: UpsertItem(database_or_Container_link, document, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertItem
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertPermission
  isExternal: false
  name: UpsertPermission(user_link, permission, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertPermission
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertStoredProcedure
  isExternal: false
  name: UpsertStoredProcedure(collection_link, sproc, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertStoredProcedure
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertTrigger
  isExternal: false
  name: UpsertTrigger(collection_link, trigger, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertTrigger
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUser
  isExternal: false
  name: UpsertUser(database_link, user, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUser
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUserDefinedFunction
  isExternal: false
  name: UpsertUserDefinedFunction(collection_link, udf, options=None)
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.UpsertUserDefinedFunction
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.WriteEndpoint
  isExternal: false
  name: WriteEndpoint
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.WriteEndpoint
- fullName: azure.cosmos.cosmos_client_connection.CosmosClientConnection.PartitionResolverErrorMessage
  isExternal: false
  name: PartitionResolverErrorMessage
  parent: azure.cosmos.cosmos_client_connection.CosmosClientConnection
  uid: azure.cosmos.cosmos_client_connection.CosmosClientConnection.PartitionResolverErrorMessage
- fullName: (file-like
  name: (file-like
  spec.python:
  - fullName: (
    name: (
  - fullName: file-like
    name: file-like
    uid: file-like
  uid: (file-like
- fullName: (str
  name: (str
  spec.python:
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  uid: (str
