### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cosmos.cosmos_client.CosmosClient.create_database
  - azure.cosmos.cosmos_client.CosmosClient.delete_database
  - azure.cosmos.cosmos_client.CosmosClient.get_database_account
  - azure.cosmos.cosmos_client.CosmosClient.get_database_client
  - azure.cosmos.cosmos_client.CosmosClient.query_databases
  - azure.cosmos.cosmos_client.CosmosClient.read_all_databases
  class: azure.cosmos.cosmos_client.CosmosClient
  fullName: azure.cosmos.cosmos_client.CosmosClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cosmos.cosmos_client
  name: CosmosClient
  summary: 'Provides a client-side logical representation of an Azure Cosmos DB account.

    Use this client to configure and execute requests to the Azure Cosmos DB service.'
  syntax:
    content: CosmosClient(url, auth, consistency_level='Session', connection_policy=None)
  type: class
  uid: azure.cosmos.cosmos_client.CosmosClient
- class: azure.cosmos.cosmos_client.CosmosClient
  exceptions:
  - description: If database with the given ID already exists.
    type: HTTPFailure
  fullName: azure.cosmos.cosmos_client.CosmosClient.create_database
  langs:
  - python
  module: azure.cosmos.cosmos_client
  name: create_database(id, session_token=None, initial_headers=None, access_condition=None,
    populate_query_metrics=None, offer_throughput=None, request_options=None, response_hook=None)
  summary: Create a new database with the given ID (name).
  syntax:
    content: create_database(id, session_token=None, initial_headers=None, access_condition=None,
      populate_query_metrics=None, offer_throughput=None, request_options=None, response_hook=None)
    parameters:
    - description: ID (name) of the database to create.
      id: id
    - defaultValue: None
      description: Token for use with Session consistency.
      id: session_token
    - defaultValue: None
      description: Initial headers to be sent as part of the request.
      id: initial_headers
    - defaultValue: None
      description: Conditions Associated with the request.
      id: access_condition
    - defaultValue: None
      description: Enable returning query metrics in response headers.
      id: populate_query_metrics
    - defaultValue: None
      description: The provisioned throughput for this offer.
      id: offer_throughput
    - defaultValue: None
      description: Dictionary of additional properties to be used for the request.
      id: request_options
    - defaultValue: None
      description: a callable invoked with the response metadata
      id: response_hook
    return:
      description: A <xref:azure.cosmos.cosmos_client.Database> instance representing
        the new database.
  type: method
  uid: azure.cosmos.cosmos_client.CosmosClient.create_database
- class: azure.cosmos.cosmos_client.CosmosClient
  exceptions:
  - description: If the database couldn't be deleted.
    type: HTTPFailure
  fullName: azure.cosmos.cosmos_client.CosmosClient.delete_database
  langs:
  - python
  module: azure.cosmos.cosmos_client
  name: delete_database(database, session_token=None, initial_headers=None, access_condition=None,
    populate_query_metrics=None, request_options=None, response_hook=None)
  summary: Delete the database with the given ID (name).
  syntax:
    content: delete_database(database, session_token=None, initial_headers=None, access_condition=None,
      populate_query_metrics=None, request_options=None, response_hook=None)
    parameters:
    - description: The ID (name), dict representing the properties or <xref:azure.cosmos.cosmos_client.Database>
        instance of the database to delete.
      id: database
    - defaultValue: None
      description: Token for use with Session consistency.
      id: session_token
    - defaultValue: None
      description: Initial headers to be sent as part of the request.
      id: initial_headers
    - defaultValue: None
      description: Conditions Associated with the request.
      id: access_condition
    - defaultValue: None
      description: Enable returning query metrics in response headers.
      id: populate_query_metrics
    - defaultValue: None
      description: Dictionary of additional properties to be used for the request.
      id: request_options
    - defaultValue: None
      description: a callable invoked with the response metadata
      id: response_hook
  type: method
  uid: azure.cosmos.cosmos_client.CosmosClient.delete_database
- class: azure.cosmos.cosmos_client.CosmosClient
  fullName: azure.cosmos.cosmos_client.CosmosClient.get_database_account
  langs:
  - python
  module: azure.cosmos.cosmos_client
  name: get_database_account(response_hook=None)
  summary: Retrieve the database account information.
  syntax:
    content: get_database_account(response_hook=None)
    parameters:
    - defaultValue: None
      description: a callable invoked with the response metadata
      id: response_hook
    return:
      description: A <xref:azure.cosmos.cosmos_client.DatabaseAccount> instance representing
        the Cosmos DB Database Account.
  type: method
  uid: azure.cosmos.cosmos_client.CosmosClient.get_database_account
- class: azure.cosmos.cosmos_client.CosmosClient
  fullName: azure.cosmos.cosmos_client.CosmosClient.get_database_client
  langs:
  - python
  module: azure.cosmos.cosmos_client
  name: get_database_client(database)
  summary: Retrieve an existing database with the ID (name) *id*.
  syntax:
    content: get_database_client(database)
    parameters:
    - description: The ID (name), dict representing the properties or <xref:azure.cosmos.cosmos_client.Database>
        instance of the database to read.
      id: database
    return:
      description: A <xref:azure.cosmos.cosmos_client.Database> instance representing
        the retrieved database.
  type: method
  uid: azure.cosmos.cosmos_client.CosmosClient.get_database_client
- class: azure.cosmos.cosmos_client.CosmosClient
  fullName: azure.cosmos.cosmos_client.CosmosClient.query_databases
  langs:
  - python
  module: azure.cosmos.cosmos_client
  name: query_databases(query=None, parameters=None, enable_cross_partition_query=None,
    max_item_count=None, session_token=None, initial_headers=None, populate_query_metrics=None,
    feed_options=None, response_hook=None)
  summary: Query the databases in a Cosmos DB SQL database account.
  syntax:
    content: query_databases(query=None, parameters=None, enable_cross_partition_query=None,
      max_item_count=None, session_token=None, initial_headers=None, populate_query_metrics=None,
      feed_options=None, response_hook=None)
    parameters:
    - defaultValue: None
      description: The Azure Cosmos DB SQL query to execute.
      id: query
    - defaultValue: None
      description: Optional array of parameters to the query. Ignored if no query
        is provided.
      id: parameters
    - defaultValue: None
      description: Allow scan on the queries which couldn't be served as indexing
        was opted out on the requested paths.
      id: enable_cross_partition_query
    - defaultValue: None
      description: Max number of items to be returned in the enumeration operation.
      id: max_item_count
    - defaultValue: None
      description: Token for use with Session consistency.
      id: session_token
    - defaultValue: None
      description: Initial headers to be sent as part of the request.
      id: initial_headers
    - defaultValue: None
      description: Enable returning query metrics in response headers.
      id: populate_query_metrics
    - defaultValue: None
      description: Dictionary of additional properties to be used for the request.
      id: feed_options
    - defaultValue: None
      description: a callable invoked with the response metadata
      id: response_hook
    return:
      description: A <xref:azure.cosmos.cosmos_client.QueryIterable> instance representing
        an iterable of database properties (dicts).
  type: method
  uid: azure.cosmos.cosmos_client.CosmosClient.query_databases
- class: azure.cosmos.cosmos_client.CosmosClient
  fullName: azure.cosmos.cosmos_client.CosmosClient.read_all_databases
  langs:
  - python
  module: azure.cosmos.cosmos_client
  name: read_all_databases(max_item_count=None, session_token=None, initial_headers=None,
    populate_query_metrics=None, feed_options=None, response_hook=None)
  summary: List the databases in a Cosmos DB SQL database account.
  syntax:
    content: read_all_databases(max_item_count=None, session_token=None, initial_headers=None,
      populate_query_metrics=None, feed_options=None, response_hook=None)
    parameters:
    - defaultValue: None
      description: Max number of items to be returned in the enumeration operation.
      id: max_item_count
    - defaultValue: None
      description: Token for use with Session consistency.
      id: session_token
    - defaultValue: None
      description: Initial headers to be sent as part of the request.
      id: initial_headers
    - defaultValue: None
      description: Enable returning query metrics in response headers.
      id: populate_query_metrics
    - defaultValue: None
      description: Dictionary of additional properties to be used for the request.
      id: feed_options
    - defaultValue: None
      description: a callable invoked with the response metadata
      id: response_hook
    return:
      description: A <xref:azure.cosmos.cosmos_client.QueryIterable> instance representing
        an iterable of database properties (dicts).
  type: method
  uid: azure.cosmos.cosmos_client.CosmosClient.read_all_databases
references:
- fullName: azure.cosmos.cosmos_client.CosmosClient.create_database
  isExternal: false
  name: create_database(id, session_token=None, initial_headers=None, access_condition=None,
    populate_query_metrics=None, offer_throughput=None, request_options=None, response_hook=None)
  parent: azure.cosmos.cosmos_client.CosmosClient
  uid: azure.cosmos.cosmos_client.CosmosClient.create_database
- fullName: azure.cosmos.cosmos_client.CosmosClient.delete_database
  isExternal: false
  name: delete_database(database, session_token=None, initial_headers=None, access_condition=None,
    populate_query_metrics=None, request_options=None, response_hook=None)
  parent: azure.cosmos.cosmos_client.CosmosClient
  uid: azure.cosmos.cosmos_client.CosmosClient.delete_database
- fullName: azure.cosmos.cosmos_client.CosmosClient.get_database_account
  isExternal: false
  name: get_database_account(response_hook=None)
  parent: azure.cosmos.cosmos_client.CosmosClient
  uid: azure.cosmos.cosmos_client.CosmosClient.get_database_account
- fullName: azure.cosmos.cosmos_client.CosmosClient.get_database_client
  isExternal: false
  name: get_database_client(database)
  parent: azure.cosmos.cosmos_client.CosmosClient
  uid: azure.cosmos.cosmos_client.CosmosClient.get_database_client
- fullName: azure.cosmos.cosmos_client.CosmosClient.query_databases
  isExternal: false
  name: query_databases(query=None, parameters=None, enable_cross_partition_query=None,
    max_item_count=None, session_token=None, initial_headers=None, populate_query_metrics=None,
    feed_options=None, response_hook=None)
  parent: azure.cosmos.cosmos_client.CosmosClient
  uid: azure.cosmos.cosmos_client.CosmosClient.query_databases
- fullName: azure.cosmos.cosmos_client.CosmosClient.read_all_databases
  isExternal: false
  name: read_all_databases(max_item_count=None, session_token=None, initial_headers=None,
    populate_query_metrics=None, feed_options=None, response_hook=None)
  parent: azure.cosmos.cosmos_client.CosmosClient
  uid: azure.cosmos.cosmos_client.CosmosClient.read_all_databases
