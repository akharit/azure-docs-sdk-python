### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.queue.QueueServiceClient.create_queue
  - azure.storage.queue.QueueServiceClient.delete_queue
  - azure.storage.queue.QueueServiceClient.from_connection_string
  - azure.storage.queue.QueueServiceClient.generate_shared_access_signature
  - azure.storage.queue.QueueServiceClient.get_queue_client
  - azure.storage.queue.QueueServiceClient.get_service_properties
  - azure.storage.queue.QueueServiceClient.get_service_stats
  - azure.storage.queue.QueueServiceClient.list_queues
  - azure.storage.queue.QueueServiceClient.set_service_properties
  class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.storage.queue._shared.utils.StorageAccountHostsMixin
  langs:
  - python
  module: azure.storage.queue
  name: QueueServiceClient
  summary: 'A client to interact with the Queue Service at the account level.


    This client provides operations to retrieve and configure the account properties

    as well as list, create and delete queues within the account.

    For operations relating to a specific queue, a client for this entity

    can be retrieved using the <xref:azure.storage.queue.QueueServiceClient.get_queue_client>
    function.'
  syntax:
    content: QueueServiceClient(account_url, credential=None, **kwargs)
    parameters:
    - description: 'The URL to the queue service endpoint. Any other entities included

        in the URL path (e.g. queue) will be discarded. This URL can be optionally

        authenticated with a SAS token.'
      id: account_url
      type:
      - str
    - description: 'The credentials with which to authenticate. This is optional if
        the

        account URL already has a SAS token. The value can be a SAS token string,
        and account

        shared access key, or an instance of a TokenCredentials class from azure.identity.'
      id: credential
    variables:
    - description: 'The full queue service endpoint URL, including SAS token if used.
        This could be

        either the primary endpoint, or the secondard endpint depending on the current
        *location_mode*.'
      id: url
      type:
      - str
    - description: The full primary endpoint URL.
      id: primary_endpoint
      type:
      - str
    - description: The hostname of the primary endpoint.
      id: primary_hostname
      type:
      - str
    - description: 'The full secondard endpoint URL if configured. If not available

        a ValueError will be raised. To explicitly specify a secondary hostname, use
        the optional

        *secondary_hostname* keyword argument on instantiation.'
      id: secondary_endpoint
      type:
      - str
    - description: 'The hostname of the secondary endpoint. If not available this

        will be None. To explicitly specify a secondary hostname, use the optional

        *secondary_hostname* keyword argument on instantiation.'
      id: secondary_hostname
      type:
      - str
    - description: 'The location mode that the client is currently using. By default

        this will be "primary". Options include "primary" and "secondary".'
      id: location_mode
      type:
      - str
  type: class
  uid: azure.storage.queue.QueueServiceClient
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.create_queue
  langs:
  - python
  module: azure.storage.queue
  name: create_queue(name, metadata=None, timeout=None, **kwargs)
  summary: 'Creates a new queue under the specified account.


    If a queue with the same name already exists, the operation fails.

    Returns a client with which to interact with the newly created queue.'
  syntax:
    content: create_queue(name, metadata=None, timeout=None, **kwargs)
    parameters:
    - description: The name of the queue to create.
      id: name
      type:
      - str
    - defaultValue: None
      description: 'A dict with name_value pairs to associate with the

        queue as metadata. Example: {''Category'': ''test''}'
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - azure.storage.queue.queue_client.QueueClient
  type: method
  uid: azure.storage.queue.QueueServiceClient.create_queue
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.delete_queue
  langs:
  - python
  module: azure.storage.queue
  name: delete_queue(queue, timeout=None, **kwargs)
  summary: 'Deletes the specified queue and any messages it contains.


    When a queue is successfully deleted, it is immediately marked for deletion

    and is no longer accessible to clients. The queue is later removed from

    the Queue service during garbage collection.


    Note that deleting a queue is likely to take at least 40 seconds to complete.

    If an operation is attempted against the queue while it was being deleted,

    an <xref:azure.storage.queue.HttpResponseError> will be thrown.'
  syntax:
    content: delete_queue(queue, timeout=None, **kwargs)
    parameters:
    - description: 'The queue to delete. This can either be the name of the queue,

        or an instance of QueueProperties.'
      id: queue
      type:
      - str
      - azure.storage.queue.models.QueueProperties
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.queue.QueueServiceClient.delete_queue
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.from_connection_string
  langs:
  - python
  module: azure.storage.queue
  name: from_connection_string(conn_str, credential=None, **kwargs)
  summary: Create QueueServiceClient from a Connection String.
  syntax:
    content: from_connection_string(conn_str, credential=None, **kwargs)
    parameters:
    - description: A connection string to an Azure Storage account.
      id: conn_str
      type:
      - str
    - description: 'The credentials with which to authenticate. This is optional if
        the

        account URL already has a SAS token, or the connection string already has
        shared

        access key values. The value can be a SAS token string, and account shared
        access

        key, or an instance of a TokenCredentials class from azure.identity.'
      id: credential
    - defaultValue: None
      id: credential
  type: method
  uid: azure.storage.queue.QueueServiceClient.from_connection_string
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.generate_shared_access_signature
  langs:
  - python
  module: azure.storage.queue
  name: generate_shared_access_signature(resource_types, permission, expiry, start=None,
    ip=None, protocol=None)
  summary: 'Generates a shared access signature for the queue service.


    Use the returned signature with the credential parameter of any Queue Service.'
  syntax:
    content: generate_shared_access_signature(resource_types, permission, expiry,
      start=None, ip=None, protocol=None)
    parameters:
    - description: Specifies the resource types that are accessible with the account
        SAS.
      id: resource_types
      type:
      - azure.storage.queue._shared.models.ResourceTypes
    - description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.'
      id: permission
      type:
      - azure.storage.queue._shared.models.AccountPermissions
    - description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying sip=168.1.5.65 or sip=168.1.5.60-168.1.5.70 on the
        SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - defaultValue: None
      description: 'Specifies the protocol permitted for a request made. The default
        value

        is https,http.'
      id: protocol
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: method
  uid: azure.storage.queue.QueueServiceClient.generate_shared_access_signature
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.get_queue_client
  langs:
  - python
  module: azure.storage.queue
  name: get_queue_client(queue, **kwargs)
  summary: 'Get a client to interact with the specified queue.


    The queue need not already exist.'
  syntax:
    content: get_queue_client(queue, **kwargs)
    parameters:
    - description: 'The queue. This can either be the name of the queue,

        or an instance of QueueProperties.'
      id: queue
      type:
      - str
      - azure.storage.queue.models.QueueProperties
    return:
      description: A <xref:azure.core.queue.queue_client.QueueClient> object.
      type:
      - azure.core.queue.queue_client.QueueClient
  type: method
  uid: azure.storage.queue.QueueServiceClient.get_queue_client
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.get_service_properties
  langs:
  - python
  module: azure.storage.queue
  name: get_service_properties(timeout=None, **kwargs)
  summary: 'Gets the properties of a storage account''s Queue service, including

    Azure Storage Analytics.'
  syntax:
    content: get_service_properties(timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - azure.storage.queue._generated.models._models.StorageServiceProperties
  type: method
  uid: azure.storage.queue.QueueServiceClient.get_service_properties
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.get_service_stats
  langs:
  - python
  module: azure.storage.queue
  name: get_service_stats(timeout=None, **kwargs)
  summary: 'Retrieves statistics related to replication for the Queue service.


    It is only available when read-access geo-redundant replication is enabled for

    the storage account.


    With geo-redundant replication, Azure Storage maintains your data durable

    in two locations. In both locations, Azure Storage constantly maintains

    multiple healthy replicas of your data. The location where you read,

    create, update, or delete data is the primary storage account location.

    The primary location exists in the region you choose at the time you

    create an account via the Azure Management Azure classic portal, for

    example, North Central US. The location to which your data is replicated

    is the secondary location. The secondary location is automatically

    determined based on the location of the primary; it is in a second data

    center that resides in the same region as the primary location. Read-only

    access is available from the secondary location, if read-access geo-redundant

    replication is enabled for your storage account.'
  syntax:
    content: get_service_stats(timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: The queue service stats.
      type:
      - azure.storage.queue._generated.models._models.StorageServiceStats
  type: method
  uid: azure.storage.queue.QueueServiceClient.get_service_stats
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.list_queues
  langs:
  - python
  module: azure.storage.queue
  name: list_queues(name_starts_with=None, include_metadata=False, marker=None, results_per_page=None,
    timeout=None, **kwargs)
  summary: 'Returns a generator to list the queues under the specified account.


    The generator will lazily follow the continuation tokens returned by

    the service and stop when all queues have been returned.'
  syntax:
    content: list_queues(name_starts_with=None, include_metadata=False, marker=None,
      results_per_page=None, timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: 'Filters the results to return only queues whose names

        begin with the specified prefix.'
      id: name_starts_with
      type:
      - str
    - defaultValue: 'False'
      description: Specifies that queue metadata be returned in the response.
      id: include_metadata
      type:
      - bool
    - defaultValue: None
      description: 'An opaque continuation token. This value can be retrieved from
        the

        next_marker field of a previous generator object. If specified,

        this generator will begin returning results from this point.'
      id: marker
      type:
      - str
    - defaultValue: None
      description: 'The maximum number of queue names to retrieve per API

        call. If the request does not specify the server will return up to 5,000 items.'
      id: results_per_page
      type:
      - int
    - defaultValue: None
      description: 'The server timeout, expressed in seconds. This function may make
        multiple

        calls to the service in which case the timeout value specified will be

        applied to each individual call.'
      id: timeout
      type:
      - int
    return:
      description: An iterable (auto-paging) of QueueProperties.
      type:
      - azure.core.queue.models.QueuePropertiesPaged
  type: method
  uid: azure.storage.queue.QueueServiceClient.list_queues
- class: azure.storage.queue.QueueServiceClient
  fullName: azure.storage.queue.QueueServiceClient.set_service_properties
  langs:
  - python
  module: azure.storage.queue
  name: set_service_properties(logging=None, hour_metrics=None, minute_metrics=None,
    cors=None, timeout=None, **kwargs)
  summary: 'Sets the properties of a storage account''s Queue service, including

    Azure Storage Analytics.


    If an element (e.g. Logging) is left as None, the

    existing settings on the service for that functionality are preserved.'
  syntax:
    content: set_service_properties(logging=None, hour_metrics=None, minute_metrics=None,
      cors=None, timeout=None, **kwargs)
    parameters:
    - defaultValue: None
      description: Groups the Azure Analytics Logging settings.
      id: logging
      type:
      - azure.storage.queue.models.Logging
    - defaultValue: None
      description: 'The hour metrics settings provide a summary of request

        statistics grouped by API in hourly aggregates for queues.'
      id: hour_metrics
      type:
      - azure.storage.queue.models.Metrics
    - defaultValue: None
      description: 'The minute metrics settings provide request statistics

        for each minute for queues.'
      id: minute_metrics
      type:
      - azure.storage.queue.models.Metrics
    - defaultValue: None
      description: 'You can include up to five CorsRule elements in the

        list. If an empty list is specified, all CORS rules will be deleted,

        and CORS will be disabled for the service.'
      id: cors
      type:
      - list(<xref:azure.storage.queue.models.CorsRule>)
    - defaultValue: None
      description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.queue.QueueServiceClient.set_service_properties
references:
- fullName: azure.storage.queue.QueueServiceClient.create_queue
  isExternal: false
  name: create_queue(name, metadata=None, timeout=None, **kwargs)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.create_queue
- fullName: azure.storage.queue.QueueServiceClient.delete_queue
  isExternal: false
  name: delete_queue(queue, timeout=None, **kwargs)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.delete_queue
- fullName: azure.storage.queue.QueueServiceClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, credential=None, **kwargs)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.from_connection_string
- fullName: azure.storage.queue.QueueServiceClient.generate_shared_access_signature
  isExternal: false
  name: generate_shared_access_signature(resource_types, permission, expiry, start=None,
    ip=None, protocol=None)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.generate_shared_access_signature
- fullName: azure.storage.queue.QueueServiceClient.get_queue_client
  isExternal: false
  name: get_queue_client(queue, **kwargs)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.get_queue_client
- fullName: azure.storage.queue.QueueServiceClient.get_service_properties
  isExternal: false
  name: get_service_properties(timeout=None, **kwargs)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.get_service_properties
- fullName: azure.storage.queue.QueueServiceClient.get_service_stats
  isExternal: false
  name: get_service_stats(timeout=None, **kwargs)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.get_service_stats
- fullName: azure.storage.queue.QueueServiceClient.list_queues
  isExternal: false
  name: list_queues(name_starts_with=None, include_metadata=False, marker=None, results_per_page=None,
    timeout=None, **kwargs)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.list_queues
- fullName: azure.storage.queue.QueueServiceClient.set_service_properties
  isExternal: false
  name: set_service_properties(logging=None, hour_metrics=None, minute_metrics=None,
    cors=None, timeout=None, **kwargs)
  parent: azure.storage.queue.QueueServiceClient
  uid: azure.storage.queue.QueueServiceClient.set_service_properties
- fullName: dict(str, str)
  name: dict(str, str)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: dict(str, str)
- fullName: list(<xref:azure.storage.queue.models.CorsRule>)
  name: list(CorsRule>)
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: <xref:azure.storage.queue.models.CorsRule>
    name: CorsRule>
    uid: <xref:azure.storage.queue.models.CorsRule>
  - fullName: )
    name: )
  uid: list(<xref:azure.storage.queue.models.CorsRule>)
